<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.1.xsd">
  
 <!-- This is where we configure Spring-Security  -->
 <http auto-config="true" use-expressions="true">
 	<access-denied-handler error-page="/auth/denied"/>
    
  	 <intercept-url pattern="/auth/login" access="permitAll"/>
  	 <intercept-url pattern="/auth/denied" access="permitAll"/>
  	 <intercept-url pattern="/register" access="permitAll"/>
  	 
  	 <intercept-url pattern="/new" access="hasRole('ROLE_DEVELOPER')"/>
  	 <intercept-url pattern="/delete" access="hasRole('ROLE_DEVELOPER')"/>
  	 <intercept-url pattern="/download" access="hasRole('ROLE_USER')"/>  	 
  	 <intercept-url pattern="/" access="hasRole('ROLE_USER')"/>
  	 <intercept-url pattern="/edit" access="hasRole('ROLE_DEVELOPER')"/>
  	 <intercept-url pattern="/app" access="hasRole('ROLE_USER')"/>
  	 <intercept-url pattern="/icon" access="hasRole('ROLE_USER')"/>
  	 <intercept-url pattern="/image" access="hasRole('ROLE_USER')"/>
  	 <intercept-url pattern="/my" access="hasRole('ROLE_DEVELOPER')"/>
  	 <intercept-url pattern="/app" access="hasRole('ROLE_USER')"/>
  	 <intercept-url pattern="/account" access="hasRole('ROLE_USER')"/>
     <intercept-url pattern="/dump" access="hasRole('ROLE_USER')"/>
   
  	<form-login  	  	
    	login-page="/auth/login"
    	authentication-failure-url="/auth/login?error=true"
    	default-target-url="/"/>
    
  <logout
    invalidate-session="true"
    logout-success-url="/auth/login"
    logout-url="/auth/logout"/>
</http>
  
	 <!-- Declare an authentication-manager to use a custom userDetailsService -->
	 <authentication-manager alias="authenticationManager">
	         <authentication-provider user-service-ref="customUserDetailsService">
	           <password-encoder ref="passwordEncoder"/>
	         </authentication-provider>
	 </authentication-manager>
  
</beans:beans>